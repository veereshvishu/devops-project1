#!/bin/bash
set -e # Exit immediately if a command exits with a non-zero status.
set -x # Print commands and their arguments as they are executed.

# --- Basic System Setup ---
apt-get update -y
apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release net-tools

# --- Disable Swap ---
# Turn swap off for the current session
swapoff -a
# Disable swap permanently in fstab
sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

# --- Kernel Modules & Sysctl Settings ---
# Load required kernel modules
cat <<EOF | tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

modprobe overlay
modprobe br_netfilter

# Set required sysctl params, persist across reboots
cat <<EOF | tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward                 = 1
EOF

# Apply sysctl params without reboot
sysctl --system

# --- Install containerd Runtime ---
# Add Docker's official GPG key (needed for containerd package from Docker repo)
install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
chmod a+r /etc/apt/keyrings/docker.gpg

# Add the Docker repository
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

# Update apt package index and install containerd
apt-get update -y
apt-get install -y containerd.io

# Configure containerd
mkdir -p /etc/containerd
containerd config default | tee /etc/containerd/config.toml
# Set systemd as the cgroup driver
sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml

# Restart and enable containerd service
systemctl restart containerd
systemctl enable containerd

# --- Install Kubernetes Components (kubelet, kubeadm, kubectl) v1.30 ---
# Add Kubernetes GPG key for v1.30
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

# Add Kubernetes v1.30 apt repository
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list

# Update apt package index and install Kubernetes components
apt-get update -y
# This will install the latest patch version available for v1.30 in the repo
apt-get install -y kubelet kubeadm kubectl

# Prevent components from being automatically updated
apt-mark hold kubelet kubeadm kubectl

# Enable the kubelet service (it will restart until joined)
systemctl enable --now kubelet

# --- Join the Kubernetes Cluster ---
echo "Waiting a few seconds for services to settle..."
sleep 10

# !!! IMPORTANT: REPLACE THE LINE BELOW WITH YOUR ACTUAL JOIN COMMAND FROM KUBEADM v1.30 !!!
# Example: kubeadm join 10.0.1.100:6443 --token abcdef.1234567890abcdef --discovery-token-ca-cert-hash sha256:deadbeef...
kubeadm join <API_SERVER_IP_OR_DNS>:6443 --token <YOUR_TOKEN> --discovery-token-ca-cert-hash sha256:<YOUR_HASH>

echo "Worker node setup and join attempt completed."